# Определение версии Docker Compose и начало описания сервисов
version: '3'

services:
  MainAPI:
    # Сборка образа для сервиса django из текущей директории
    build: .
    # Задание имени контейнера для сервиса django
    container_name: app_main
    # Задание команды, которую нужно запустить при запуске контейнера для сервиса django
    command: uvicorn main:app_main --reload
    volumes:
      - .:/usr/src/app/src
    # Открытие порта на хостовой машине и перенаправление на порт в контейнере
    ports:
      - 8000:8000
    # Зависимость от другого сервиса
    depends_on:
      - postgres_db
    networks:
      node_net:
        ipv4_address: 172.28.1.2
		
  SpiderAPI:
    # Сборка образа для сервиса django из текущей директории
    build: .
    # Задание имени контейнера для сервиса django
    container_name: app_spider
    # Задание команды, которую нужно запустить при запуске контейнера для сервиса django
    command: uvicorn main:app_spider --reload
    volumes:
      - .:/usr/src/app/src
    # Открытие порта на хостовой машине и перенаправление на порт в контейнере
    ports:
      - 8001:8000
    # Зависимость от другого сервиса
    depends_on:
      - postgres_db
    networks:
      node_net:
        ipv4_address: 172.28.1.3
		
  redis:
    image: "redis:alpine"
    command: redis-server --requirepass sOmE_sEcUrE_pAsS
    ports:
     - "6379:6379"
    volumes:
     - $PWD/redis-data:/var/lib/redis
     - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
     - REDIS_REPLICATION_MODE=master
    networks:
      node_net:
        ipv4_address: 172.28.1.4
		
  postgres_db:
    # Использование готового образа postgres
    image: postgres
    restart: always
    # Задание переменных окружения для контейнера с postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
     # Задание имени контейнера для сервиса pgdb
    container_name: postgres_db
     # Связывание тома с директорией в контейнере для сохранения данных postgres
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    networks:
      node_net:
        ipv4_address: 172.28.1.5

  pgadmin:
    image: dpage/pgadmin4
    environment:
        PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
        PGADMIN_DEFAULT_PASSWORD: password
        PGADMIN_LISTEN_PORT: 80
    ports:
        - 15432:80
    volumes:
        - pgadmin:/var/lib/pgadmin
    depends_on:
        - postgres
# networking for the Redis container
networks:
  node_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16